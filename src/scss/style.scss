/*
! tailwindcss v3.4.0 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  /* 3 */
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
  --swiper-pagination-color: #2490A8;
  --swiper-pagination-bullet-inactive-color: #FFFFFF;
  --swiper-pagination-bullet-inactive-opacity: 0.9;
  --swiper-pagination-bottom: 1.75rem;
  @media (min-width: 1024px) {
    --swiper-pagination-bottom: 2.5rem;
  }
}

html {
  font-size: 100%;
  scroll-behavior: smooth;
}

body {
  --tw-text-opacity: 1;
  color: rgb(61 78 92 / var(--tw-text-opacity));
}

main {
  display: grid;
  gap: 1rem;
}

h2 {
  font-family: Intro;
  font-size: 1.25rem;
  line-height: 130%;
  font-weight: 900;
  letter-spacing: -0.035rem;
  --tw-text-opacity: 1;
  color: rgb(123 147 167 / var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  h2 {
    font-size: 3rem;
    line-height: 120%;
  }
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

@mixin avenir {
  $path: '../fonts/avenir';

  @font-face {
    font-family: 'Avenir';

    src: url(#{$path}/avenirnextcyr-regular.eot);

    src: local('avenirnextcyr regular'), local('avenirnextcyr-regular'),
      url(#{$path}/avenirnextcyr-regular.eot?#iefix) format('embedded-opentype'),
      url(#{$path}/avenirnextcyr-regular.woff2) format('woff2'),
      url(#{$path}/avenirnextcyr-regular.woff) format('woff'),
      url(#{$path}/avenirnextcyr-regular.ttf) format('ttf');

    font-weight: 400;

    font-style: normal;
  }

  @font-face {
    font-family: 'Avenir';

    src: url(#{$path}/avenirnextcyr-bold.eot);

    src: local('avenirnextcyr bold'), local('avenirnextcyr-bold'),
      url(#{$path}/avenirnextcyr-bold.eot?#iefix) format('embedded-opentype'),
      url(#{$path}/avenirnextcyr-bold.woff2) format('woff2'),
      url(#{$path}/avenirnextcyr-bold.woff) format('woff'),
      url(#{$path}/avenirnextcyr-bold.ttf) format('ttf');

    font-weight: 700;

    font-style: normal;
  }
}

@include avenir();

@mixin intro {
  $path: '../fonts/intro';

  @font-face {
    font-family: 'Intro';

    src: url(#{$path}/intro_black.eot);

    src: local('intro_black'), local('intro_black'),
      url(#{$path}/intro_black.eot?#iefix) format('embedded-opentype'),
      url(#{$path}/intro_black.woff2) format('woff2'),
      url(#{$path}/intro_black.woff) format('woff'),
      url(#{$path}/intro_black.ttf) format('ttf');

    font-weight: 900;

    font-style: normal;
  }
}

@include intro();

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 769px) {
  .container {
    max-width: 769px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1660px) {
  .container {
    max-width: 1660px;
  }
}

@media (min-width: 1920px) {
  .container {
    max-width: 1920px;
  }
}

.container {
  max-width: 1440px;
  padding: 0 ;
  margin-right: auto;
  margin-left: auto;
}

/* input */

.field {
  position: relative;
  width: 100%;
  input ~ label {
    font-size: 1rem;
    line-height: 140%;
  }
  input ~ label {
    letter-spacing: -0.04rem;
  }
  input ~ label {
    --tw-text-opacity: 1;
    color: rgb(123 147 167 / var(--tw-text-opacity));
  }
  input ~ label {
    position: absolute;
  }
  input ~ label {
    left: 1rem;
  }
  input ~ label {
    top: 50%;
  }
  input ~ label {
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  input ~ label {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  input ~ label {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  input ~ label {
    transition-duration: 300ms;
  }
  input ~ label {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  input {
    height: 3.625rem;
  }
  input {
    width: 100%;
  }
  input {
    border-radius: 0.75rem;
  }
  input {
    border-width: 1px;
  }
  input {
    --tw-border-opacity: 1;
    border-color: rgb(213 240 246 / var(--tw-border-opacity));
  }
  input {
    padding-left: 1rem;
  }
  input {
    padding-right: 3rem;
  }
  input {
    font-size: 1rem;
    line-height: 140%;
  }
  input {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
  input::placeholder {
    color: transparent;
  }
  input {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  input {
    transition-duration: 300ms;
  }
  input {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  input:focus {
    --tw-border-opacity: 1;
    border-color: rgb(87 195 219 / var(--tw-border-opacity));
  }
  input:focus {
    --tw-shadow: 0px 0px 6px 0px rgba(87, 195, 219, 0.32);
    --tw-shadow-colored: 0px 0px 6px 0px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  input:focus {
    padding-top: 0.625rem;
  }
  input:not(:placeholder-shown) {
    padding-top: 0.625rem;
  }
  textarea ~ label {
    font-size: 1rem;
    line-height: 140%;
  }
  textarea ~ label {
    letter-spacing: -0.04rem;
  }
  textarea ~ label {
    --tw-text-opacity: 1;
    color: rgb(123 147 167 / var(--tw-text-opacity));
  }
  textarea ~ label {
    position: absolute;
  }
  textarea ~ label {
    left: 1rem;
  }
  textarea ~ label {
    top: 1rem;
  }
  textarea ~ label {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  textarea ~ label {
    transition-duration: 300ms;
  }
  textarea ~ label {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  textarea {
    height: 10rem;
  }
  textarea {
    width: 100%;
  }
  textarea {
    border-radius: 0.75rem;
  }
  textarea {
    border-width: 1px;
  }
  textarea {
    --tw-border-opacity: 1;
    border-color: rgb(213 240 246 / var(--tw-border-opacity));
  }
  textarea {
    padding-left: 1rem;
  }
  textarea {
    padding-right: 3rem;
  }
  textarea {
    font-size: 1rem;
    line-height: 140%;
  }
  textarea {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
  textarea::placeholder {
    color: transparent;
  }
  textarea {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  textarea {
    transition-duration: 300ms;
  }
  textarea {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  textarea:focus {
    --tw-border-opacity: 1;
    border-color: rgb(87 195 219 / var(--tw-border-opacity));
  }
  textarea:focus {
    --tw-shadow: 0px 0px 6px 0px rgba(87, 195, 219, 0.32);
    --tw-shadow-colored: 0px 0px 6px 0px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  textarea:focus {
    padding-top: 1.75rem;
  }
  textarea:not(:placeholder-shown) {
    padding-top: 1.75rem;
  }
  textarea:not(:placeholder-shown) ~ label,
    textarea:focus ~ label,
    input:not(:placeholder-shown) ~ label,
    input:focus ~ label {
    padding: 0;
    font-size: 0.75rem;
    line-height: normal;
    top: 0.875rem;
  }
  &__invalid input {
    --tw-border-opacity: 1;
    border-color: rgb(255 96 88 / var(--tw-border-opacity));
  }
  textarea ~ button {
    position: absolute;
  }
  textarea ~ button {
    top: 1rem;
  }
  textarea ~ button {
    right: 1rem;
  }
  input ~ button {
    position: absolute;
  }
  input ~ button {
    top: 50%;
  }
  input ~ button {
    right: 1rem;
  }
  input ~ button {
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  input ~ button {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

/* select */

.select {
  position: relative;
  &__head {
    position: relative;
  }
  &__head {
    display: flex;
  }
  &__head {
    height: 3.625rem;
  }
  &__head {
    width: 100%;
  }
  &__head {
    align-items: center;
  }
  &__head {
    border-radius: 0.75rem;
  }
  &__head {
    border-width: 1px;
  }
  &__head {
    --tw-border-opacity: 1;
    border-color: rgb(228 245 255 / var(--tw-border-opacity));
  }
  &__head {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }
  &__head {
    padding-left: 1rem;
  }
  &__head {
    padding-right: 3rem;
  }
  &__head {
    font-size: 1rem;
    line-height: 140%;
  }
  &__head {
    &:after {
      content: '';
      position: absolute;
      top: 50%;
      right: 1rem;
      transform: translateY(-50%);
      width: 1.5rem;
      height: 1.5rem;
      background-image: url("data:image/svg+xml,%3Csvg width='24' height='25' viewBox='0 0 24 25' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.031 10.0306L12.531 17.5306C12.4614 17.6003 12.3787 17.6556 12.2876 17.6933C12.1966 17.7311 12.099 17.7505 12.0004 17.7505C11.9019 17.7505 11.8043 17.7311 11.7132 17.6933C11.6222 17.6556 11.5394 17.6003 11.4698 17.5306L3.96979 10.0306C3.82906 9.88982 3.75 9.69895 3.75 9.49993C3.75 9.30091 3.82906 9.11003 3.96979 8.9693C4.11052 8.82857 4.30139 8.74951 4.50042 8.74951C4.69944 8.74951 4.89031 8.82857 5.03104 8.9693L12.0004 15.9396L18.9698 8.9693C19.0395 8.89962 19.1222 8.84435 19.2132 8.80663C19.3043 8.76892 19.4019 8.74951 19.5004 8.74951C19.599 8.74951 19.6965 8.76892 19.7876 8.80663C19.8786 8.84435 19.9614 8.89962 20.031 8.9693C20.1007 9.03899 20.156 9.12171 20.1937 9.21276C20.2314 9.3038 20.2508 9.40138 20.2508 9.49993C20.2508 9.59847 20.2314 9.69606 20.1937 9.7871C20.156 9.87815 20.1007 9.96087 20.031 10.0306Z' fill='%237B93A7'/%3E%3C/svg%3E%0A");
      background-repeat: no-repeat;
      background-position: center;
    }
    &:after {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    &:after {
      transition-duration: 300ms;
    }
    &:after {
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
  }
  &__body {
    position: absolute;
  }
  &__body {
    bottom: 0px;
  }
  &__body {
    z-index: 10;
  }
  &__body {
    width: 100%;
  }
  &__body {
    --tw-translate-y: 100%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &__body {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &__body {
    overflow: hidden;
  }
  &__body {
    border-radius: 0.75rem;
  }
  &__body {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }
  &__body {
    font-size: 1rem;
    line-height: 140%;
  }
  &__body {
    box-shadow: 0px 109px 65px 0px rgba(0, 0, 0, 0.05),
        0px 194px 77px 0px rgba(0, 0, 0, 0.01),
        0px 303px 85px 0px rgba(0, 0, 0, 0);
    display: grid;
    grid-template-rows: 0
  }
  &__body {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &__body {
    transition-duration: 300ms;
  }
  &__body {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  &__body {
    &-top {
      top: 0px;
    }
    &-top {
      --tw-translate-y: -100%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    &-top {
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    &-bottom {
      bottom: 0px;
    }
    &-bottom {
      --tw-translate-y: 100%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    &-bottom {
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    &-wrapper {
      border-radius: 0.75rem;
    }
    &-wrapper {
      border-width: 1px;
    }
    &-wrapper {
      --tw-border-opacity: 1;
      border-color: rgb(228 245 255 / var(--tw-border-opacity));
    }
  }
  &__options {
    display: grid;
  }
  &__options {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
  &__options {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }
  &__options {
    & > div {
      display: flex;
    }
    & > div {
      cursor: pointer;
    }
    & > div {
      align-items: center;
    }
    & > div {
      border-radius: 0.5rem;
    }
    & > div {
      padding-left: 1rem;
      padding-right: 1rem;
    }
    & > div {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
    }
    & > div {
      font-size: 0.875rem;
      line-height: 140%;
    }
    & > div {
      letter-spacing: -0.035rem;
    }
    & > div {
      --tw-text-opacity: 1;
      color: rgb(123 147 167 / var(--tw-text-opacity));
    }
    & > div {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & > div {
      transition-duration: 300ms;
    }
    & > div {
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    & > div {
      &.active {
        --tw-bg-opacity: 1;
        background-color: rgb(234 247 250 / var(--tw-bg-opacity));
      }
      &.active {
        --tw-text-opacity: 1;
        color: rgb(61 78 92 / var(--tw-text-opacity));
      }
    }
  }
  @media (hover: hover) {
    &__options > div:hover {
      --tw-bg-opacity: 1;
      background-color: rgb(234 247 250 / var(--tw-bg-opacity));
    }
  }
  @media (hover: none) {
    &__options > div:active {
      --tw-bg-opacity: 1;
      background-color: rgb(234 247 250 / var(--tw-bg-opacity));
    }
  }
  &.active &__head {
    --tw-border-opacity: 1;
    border-color: rgb(87 195 219 / var(--tw-border-opacity));
  }
  &.active &__head {
    --tw-shadow: 0px 0px 6px 0px rgba(87, 195, 219, 0.32);
    --tw-shadow-colored: 0px 0px 6px 0px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  &.active &__head {
    &::after {
      transform: translateY(-50%) rotate(180deg);
    }
  }
  &.active &__body {
    grid-template-rows: 1fr;
  }
  &__invalid &__head {
    --tw-border-opacity: 1;
    border-color: rgb(255 96 88 / var(--tw-border-opacity));
  }
}

/* button */

.btn {
  height: 3.875rem;
  border-radius: 0.75rem;
  --tw-bg-opacity: 1;
  background-color: rgb(36 144 168 / var(--tw-bg-opacity));
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 1rem;
  line-height: 140%;
  font-weight: 700;
  letter-spacing: -0.04rem;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media(hover:hover) {
  .btn:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(53 162 186 / var(--tw-bg-opacity));
  }
}

.btn:active {
  --tw-bg-opacity: 1;
  background-color: rgb(27 108 126 / var(--tw-bg-opacity));
}

@media(hover:none) {
  .btn:active {
    --tw-bg-opacity: 1;
    background-color: rgb(27 108 126 / var(--tw-bg-opacity));
  }
}

.btn:disabled {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(228 245 255 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(228 245 255 / var(--tw-text-opacity));
}

.btn-prev,
  .btn-next {
  height: 4rem;
  width: 4rem;
  padding: 1rem;
  & > svg {
    height: 100%;
  }
  & > svg {
    width: 100%;
  }
}

.btn-fit {
  display: grid;
  height: 3rem;
  width: 3rem;
  place-self: center;
  border-radius: 0.75rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(213 240 246 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(234 247 250 / var(--tw-bg-opacity));
  padding: 0.75rem;
  --tw-text-opacity: 1;
  color: rgb(123 147 167 / var(--tw-text-opacity));
}

@media(hover:hover) {
  .btn-fit:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(171 225 237 / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: rgb(27 108 126 / var(--tw-text-opacity));
  }
}

.btn-fit {
  & > svg {
    height: 100%;
  }
  & > svg {
    width: 100%;
  }
  &_sm {
    height: 2rem;
  }
  &_sm {
    width: 2rem;
  }
  &_sm {
    padding: 0.5rem;
  }
  &_lg {
    height: 4rem;
  }
  &_lg {
    width: 4rem;
  }
  &_lg {
    padding: 1rem;
  }
}

/* accordeon */

.accordeon {
  display: grid;
  gap: 1rem;
  .item {
    &__head {
      display: grid;
    }
    &__head {
      grid-template-columns: 24px 1fr;
    }
    &__head {
      gap: 0.75rem;
    }
    &__head {
      border-radius: 0.75rem;
    }
    &__head {
      padding: 0.75rem;
    }
    &__head {
      font-weight: 700;
    }
    &__head {
      --tw-text-opacity: 1;
      color: rgb(123 147 167 / var(--tw-text-opacity));
    }
    &__body {
      display: grid;
    }
    &__body {
      grid-template-rows: 0fr;
      overflow: hidden;
      &-wrapper {
        min-height: 0;
        & > * {
          display: block;
        }
        & > * {
          border-radius: 0.75rem;
        }
        & > * {
          padding: 0.75rem;
        }
        & > * {
          padding-right: 0.75rem;
        }
        & > * {
          padding-left: 3rem;
        }
        & > * {
          &.active {
            --tw-bg-opacity: 1;
            background-color: rgb(228 245 255 / var(--tw-bg-opacity));
          }
        }
      }
    }
    &.active .item__head {
      --tw-bg-opacity: 1;
      background-color: rgb(228 245 255 / var(--tw-bg-opacity));
    }
    &.active .item__head {
      --tw-text-opacity: 1;
      color: rgb(36 144 168 / var(--tw-text-opacity));
    }
    &.active .item__body {
      grid-template-rows: 1fr;
    }
  }
}

/*  breadcrumbs */

ul.breadcrumb {
  display: flex;
  flex-wrap: wrap;
}

/* Display list items side by side */

ul.breadcrumb li {
  font-size: 1rem;
  line-height: 160%;
  letter-spacing: -0.04rem;
  --tw-text-opacity: 1;
  color: rgb(163 180 194 / var(--tw-text-opacity));
}

/* Add a slash symbol (/) before/behind each list item */

ul.breadcrumb li + li:before {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  --tw-text-opacity: 1;
  color: rgb(36 144 168 / var(--tw-text-opacity));
  content: '—';
}

/* Add a color to all links inside the list */

ul.breadcrumb li a {
  --tw-text-opacity: 1;
  color: rgb(36 144 168 / var(--tw-text-opacity));
  text-decoration-line: underline;
}

/* Add a color on mouse-over */

ul.breadcrumb li a:hover {
  color: #01447e;
  text-decoration: underline;
}

.block {
  display: block;
}

.hidden {
  display: none;
}

header {
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0px;
  z-index: 50;
  .header__wrapper {
    display: flex;
  }
  .header__wrapper {
    justify-content: space-between;
  }
  .header__wrapper {
    border-radius: 1.25rem;
  }
  .header__wrapper {
    border-bottom-width: 1px;
  }
  .header__wrapper {
    --tw-border-opacity: 1;
    border-bottom-color: rgb(213 240 246 / var(--tw-border-opacity));
  }
  .header__wrapper {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }
  .header__wrapper {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  .header__wrapper {
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
  }
  @media (min-width: 1024px) {
    .header__wrapper {
      display: grid;
    }
  }
  @media (min-width: 1024px) {
    .header__wrapper {
      grid-template-columns: repeat(9, minmax(0, 1fr));
    }
  }
  @media (min-width: 1024px) {
    .header__wrapper {
      border-bottom-right-radius: 2.5rem;
      border-bottom-left-radius: 2.5rem;
    }
  }
  @media (min-width: 1024px) {
    .header__wrapper {
      padding-left: 2.5rem;
      padding-right: 2.5rem;
    }
  }
  .header {
    @media (min-width: 1024px) {
      &__left {
        grid-column: span 2 / span 2;
      }
    }
    &__center {
      display: none;
    }
    @media (min-width: 1024px) {
      &__center {
        grid-column: span 5 / span 5;
      }
    }
    @media (min-width: 1024px) {
      &__center {
        display: block;
      }
    }
    @media (min-width: 1024px) {
      &__center {
        align-self: center;
      }
    }
    @media (min-width: 1024px) {
      &__center {
        justify-self: center;
      }
    }
    &__right {
      display: flex;
    }
    &__right {
      align-items: center;
    }
    &__right {
      gap: 2rem;
    }
    @media (min-width: 1024px) {
      &__right {
        grid-column: span 2 / span 2;
      }
    }
    @media (min-width: 1024px) {
      &__right {
        justify-content: flex-end;
      }
    }
    &__right {
      .link {
        font-size: 0.875rem;
        line-height: 140%;
      }
      .link {
        font-weight: 700;
      }
      .link {
        letter-spacing: -0.0175rem;
      }
      .link {
        --tw-text-opacity: 1;
        color: rgb(36 144 168 / var(--tw-text-opacity));
      }
      @media (min-width: 1024px) {
        .link {
          display: none;
        }
      }
      .locales {
        display: none;
      }
      @media (min-width: 1024px) {
        .locales {
          display: flex;
        }
      }
    }
  }
  .logo {
    --tw-text-opacity: 1;
    color: rgb(27 108 126 / var(--tw-text-opacity));
  }
  nav {
    display: none;
  }
  nav {
    align-items: center;
  }
  nav {
    gap: 2rem;
  }
  @media (min-width: 1024px) {
    nav {
      display: flex;
    }
  }
  nav {
    & > a {
      padding: 0.75rem;
    }
    & > a {
      font-size: 1rem;
      line-height: 140%;
    }
    & > a {
      font-weight: 700;
    }
    & > a {
      --tw-text-opacity: 1;
      color: rgb(36 144 168 / var(--tw-text-opacity));
    }
  }
}

